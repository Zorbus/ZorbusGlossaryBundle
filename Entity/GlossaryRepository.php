<?php

namespace Zorbus\GlossaryBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * GlossaryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class GlossaryRepository extends EntityRepository
{

    public function getEntries()
    {
        $query = <<<QUERY
            SELECT g FROM ZorbusGlossaryBundle:Glossary g WHERE g.enabled = :enabled ORDER BY g.letter ASC, g.title ASC
QUERY;

        return $this
                        ->getEntityManager()
                        ->createQuery($query)
                        ->setParameter('enabled', true)
                        ->getResult();
    }
    public function getEntriesWithLetters(array $letters)
    {
        $letters = "('".implode("', '", $letters)."')";
        $query = <<<QUERY
            SELECT DISTINCT g.letter FROM ZorbusGlossaryBundle:Glossary g WHERE g.enabled = :enabled AND g.letter IN $letters ORDER BY g.letter ASC, g.title ASC
QUERY;

        $entries = $this
                        ->getEntityManager()
                        ->createQuery($query)
                        ->setParameter('enabled', true)
                        ->getResult();

        $letters = array();
        foreach ($entries as $entry)
        {
            $letters[] = $entry['letter'];
        }

        return $letters;
    }

    public function getEntry($slug)
    {
        $query = <<<QUERY
            SELECT g FROM ZorbusGlossaryBundle:Glossary g WHERE g.enabled = :enabled AND g.slug = :slug ORDER BY g.letter ASC, g.title ASC
QUERY;

        try
        {
            return $this
                            ->getEntityManager()
                            ->createQuery($query)
                            ->setParameter('enabled', true)
                            ->setParameter('slug', $slug)
                            ->getSingleResult();
        }
        catch (\Exception $e)
        {
            return null;
        }
    }

    public function getEntriesByLetter($letter)
    {
        $query = <<<QUERY
            SELECT g FROM ZorbusGlossaryBundle:Glossary g WHERE g.enabled = :enabled AND g.letter = :letter ORDER BY g.letter ASC, g.title ASC
QUERY;

        return $this
                        ->getEntityManager()
                        ->createQuery($query)
                        ->setParameter('enabled', true)
                        ->setParameter('letter', $letter)
                        ->getResult();
    }

}
